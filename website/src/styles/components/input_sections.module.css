.normal .selectBorder{
    border: 2px solid var(--secondary-gray);
    border-radius: 8px;
}

/*
 When the input is in the success state change the border colour to be green
 */
.success .selectBorder{
    border: 2px solid #32936F;
    border-radius: 8px;
}

/*
 When the input is in the error state change the border colour to be red
 */
.error .selectBorder{
    border: 2px solid #F57E77;
    border-radius: 8px;
}


/*
 Since cant change much of the place holder text have to use absolute position and translate to move it to make a overlay label
 Smaller font to suggest insignificance and to not distract from the input
 */
.required{
    color: var(--text-dark);
    font-size: 12px;
    line-height: 15px;
    position: absolute;
    translate: 35% 30%;
}

/*
 Hide the required text when the input is focused
 */
.hidden {
    opacity: 0;
}

/*
 When the input is in the success state change the required text to be the same green as the border
 */
.success .required{
    color: #32936F;
}

/*
 When the input is in the error state change the required text to be the same red as the border
 */
.error .required{
    color: #F57E77;
}

/*
 Similar to the required text use absolute positioning and translate to move the icon to the right place
 Give it a green colour to match the border
 */
.icon{
    padding-left: 5px;
    color: #32936F;
    opacity: 1;
}

/*
 Hide the icon when the input is not in the success state
 Using opacity instead of display so that the it can be animated
 */
.icon.hidden {
    opacity: 0;
}

/*
 The error text to be displayed below the input div
 The text is red to match the border
 Smaller font to not distract from the input
 */
.errorText{
    color: #F57E77;
    font-size: 12px;
    line-height: 15px;
    padding: 5px;
}

/**** INPUTS ****/


/*
 Use a top spacing var so that it can be changed easily via JS
 Min width so that the position of the icon doesn't change when the input is too small
 */
.smallInput {
    --top-spacing: 8px;
    width: 100%;
}

/*
  Style the input box to look better by changing the border and adding a border radius
  Make it take up the full width of the container
 */
.smallInput input[type=text] {
    padding: var(--top-spacing) 16px 8px 16px;
    border-radius: 8px;
    width: 100%;
    background: var(--main-background);

}

.dropdownInput {
    --top-spacing: 8px;
    min-width: 100%;
}


.dropdownInput .dropDownSelect{
    padding: var(--top-spacing) 16px 8px 11px;
    border-radius: 8px;
    box-sizing: border-box;
    width: 100%;
    color: #ABAFB1; /* Input can have it's own gray the works with most themes */
    font-size: 16px;
    line-height: 19px;
    background: var(--main-background);
}


.simpleTextArea{
    --top-spacing: 8px;
    width: 100%;
}

.simpleTextArea .simpleTextAreaTA{
    padding: var(--top-spacing) 16px 8px 11px;
    color: #ABAFB1;
    font-size: 16px;
    line-height: 19px;
    width: 100%;
    border: 2px solid var(--secondary-gray);
    border-radius: 8px;
    height: 120px;
    background: var(--main-background);
}

.simpleTextArea .required{
    translate: 25% 30%;
}

.success .simpleTextAreaTA{
    border: 2px solid #32936F;
    border-radius: 8px;
}

.error .simpleTextAreaTA{
    border: 2px solid #F57E77;
    border-radius: 8px;
}



.advancedTextArea{
    color: #ABAFB1;
    background-color: var(--main-background);
    border-radius: 8px;
    --top-spacing: 16px;
    width: 100%;
}

.fileInput{
    color: #ABAFB1;
    background-color: var(--main-background);
    border-radius: 8px;
    --top-spacing: 16px;
    width: 100%;

}

.fileInput .uploadButton{
    padding: var(--top-spacing) 16px 8px 11px;
}

.uploadButton label{
    display: grid;
    grid-template-rows: 1fr;
    align-items: center;
    justify-items: center;
}

.uploadButton input[type=file]{
    display: none;
}
